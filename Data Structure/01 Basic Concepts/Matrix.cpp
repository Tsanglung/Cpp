//¯x°}
#include<iostream>
using namespace std;

void Transpose(int **a , int m , int n){ //Âà¸m¯x°}
    for(int i = 0; i < m; i++)
        for(int j = i + 1; j < n; j++)
            swap(a[i][j] , a[j][i]);
}

void MatrixAdd(int **a , int **b , int **c , int m , int n){
    for(int i = 0; i < m; i++)
        for(int j = 0; j < n; j++)
            c[i][j] = a[i][j] + b[i][j];
}

void MatrixMul(int **a,int **b,int **c,int m , int n){
    for(int i = 0; i < n; i++)
        for(int j = 0; j < n; j++){
            c[i][j] = 0;
            for(int k = 0; k < n; k++)
                c[i][j] += a[i][k] * b[k][j];
        }
}

int main(){
    int** a = new int *[8] , ** b = new int *[8] , ** c = new int *[8];
    for (int i = 0; i < 8; ++i)
        a[i] = new int [8] , b[i] = new int [8] , c[i] = new int [8];
    
    a[0][0] = 1; a[0][1] = 3; a[0][2] = 5; a[0][3] = 7; a[0][4] = 9; a[0][5] = 11; a[0][6] = 13; a[0][7] = 15;
    a[1][0] = 15; a[1][1] = 13; a[1][2] = 11; a[1][3] = 9; a[1][4] = 7; a[1][5] = 5; a[1][6] = 3; a[1][7] = 1;
    a[2][0] = 2; a[2][1] = 4; a[2][2] = 6; a[2][3] = 8; a[2][4] = 10; a[2][5] = 12; a[2][6] = 14; a[2][7] = 16;
    a[3][0] = 3; a[3][1] = 4; a[3][2] = 6; a[3][3] = 8; a[3][4] = 10; a[3][5] = 13; a[3][6] = 14; a[3][7] = 16;
    a[4][0] = 4; a[4][1] = 4; a[4][2] = 6; a[4][3] = 8; a[4][4] = 10; a[4][5] = 14; a[4][6] = 14; a[4][7] = 16;
    a[5][0] = 5; a[5][1] = 4; a[5][2] = 6; a[5][3] = 8; a[5][4] = 10; a[5][5] = 15; a[5][6] = 14; a[5][7] = 16;
    a[6][0] = 6; a[6][1] = 4; a[6][2] = 6; a[6][3] = 8; a[6][4] = 10; a[6][5] = 16; a[6][6] = 14; a[6][7] = 16;
    a[7][0] = 7; a[7][1] = 4; a[7][2] = 6; a[7][3] = 8; a[7][4] = 10; a[7][5] = 17; a[7][6] = 14; a[7][7] = 16;
    

    b[0][0] = 1; b[0][1] = 3; b[0][2] = 5; b[0][3] = 7; b[0][4] = 9; b[0][5] = 11; b[0][6] = 13; b[0][7] = 15;
    b[1][0] = 15; b[1][1] = 13; b[1][2] = 11; b[1][3] = 9; b[1][4] = 7; b[1][5] = 5; b[1][6] = 3; b[1][7] = 1;
    b[2][0] = 2; b[2][1] = 4; b[2][2] = 6; b[2][3] = 8; b[2][4] = 10; b[2][5] = 12; b[2][6] = 14; b[2][7] = 16;
    b[3][0] = 3; b[3][1] = 4; b[3][2] = 6; b[3][3] = 8; b[3][4] = 10; b[3][5] = 13; b[3][6] = 14; b[3][7] = 16;
    b[4][0] = 4; b[4][1] = 4; b[4][2] = 6; b[4][3] = 8; b[4][4] = 10; b[4][5] = 14; b[4][6] = 14; b[4][7] = 16;
    b[5][0] = 5; b[5][1] = 4; b[5][2] = 6; b[5][3] = 8; b[5][4] = 10; b[5][5] = 15; b[5][6] = 14; b[5][7] = 16;
    b[6][0] = 6; b[6][1] = 4; b[6][2] = 6; b[6][3] = 8; b[6][4] = 10; b[6][5] = 16; b[6][6] = 14; b[6][7] = 16;
    b[7][0] = 7; b[7][1] = 4; b[7][2] = 6; b[7][3] = 8; b[7][4] = 10; b[7][5] = 17; b[7][6] = 14; b[7][7] = 16;

    MatrixAdd(a,b,c,8,8);
    
    for(int i = 0; i < 8;i++){
        for(int j = 0; j < 8; j++)
            cout << c[i][j] << " ";
        cout << endl;
    }
    cout << endl;
    for (int i = 0; i < 8; ++i) 
        delete[] c[i];
    delete[] c;

    MatrixMul(a,b,c,8,8);
    
    for(int i = 0; i < 8;i++){
        for(int j = 0; j < 8; j++)
            cout << c[i][j] << " ";
        cout << endl;
    }
    cout << endl;

    Transpose(c,8,8);
    for(int i = 0; i < 8;i++){
        for(int j = 0; j < 8; j++)
            cout << c[i][j] << " ";
        cout << endl;
    }

    for (int i = 0; i < 8; ++i) 
        delete[] a[i] , delete[] b[i] , delete[] c[i];
    delete[] a , delete[] b , delete[] c;
}